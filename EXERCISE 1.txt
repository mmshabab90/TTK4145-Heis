EXERCISE 1

3)
-To reduce wasted runtime (such as waiting for input).
-To utilise more than one core/computer.

When there are several tasks that should or can be executes in parallel, concurrent programming lets you code the parts separately. However, it requres the programmer to keep track of parallel processes. Results of concurrent processes must be finished before they are accessed by other parts of the program.

Processes run in separate memory spaces.
Threads run in shared memory space.

Standard threads are scheduled by the operating system.
Green threads are scheduled by a virtual machine.

Coroutines are routines that can run for a while, then return control to another routine, then run some more from where they left off.

pthread_thread(), threading.Thread() and go make new threads.

When there are several tasks that should or can be executes in parallel, concurrent programming lets you code the parts separately. However, it requres the programmer to keep track of parallel processes.

Hei her har Erik rotet
